:root {
  --cell-size: clamp(32px, 9vw, 84px);
  --board-size: calc(9 * var(--cell-size));
  --pad: clamp(12px, 2vmin, 24px);

  --bg: #0b0c10;
  --panel: #111319;
  --panel-2: #151826;
  --text: #e8f0fe;
  --muted: #b5bfd3;
  --primary: #0a84ff;
  --success: #30d158;
  --warning: #ff9f0a;
  --danger: #ff6b6b;
  --grid: #2b2f43;
  --grid-strong: #3e4468;
}

:root[data-theme='day'] {
  --bg: #f7f8fb;
  --panel: #ffffff;
  --panel-2: #eef2ff;
  --text: #0b1533;
  --muted: #4b5568;
  --primary: #0a84ff;
  --danger: #d32f2f;
  --grid: #ced3e0;
  --grid-strong: #6b7280;
}

* {
  box-sizing: border-box;
}
html,
body {
  height: 100dvh;
  min-height: 100dvh;
}
body {
  margin: 0;
  background: var(--bg);
  color: var(--text);
  font:
    14px/1.4 system-ui,
    -apple-system,
    Segoe UI,
    Roboto,
    Ubuntu,
    Cantarell,
    Noto Sans,
    Arial,
    'Apple Color Emoji',
    'Segoe UI Emoji';
  -webkit-font-smoothing: antialiased;
  touch-action: manipulation;
}

/* Header/App container widths capped to viewport */
.site-header,
.site-footer,
.app {
  width: min(100vw - 16px, calc(var(--board-size) + 2 * var(--pad)));
  margin: 12px auto;
  padding: 0 var(--pad);
}

.site-header {
  display: grid;
  row-gap: 10px;
}
.site-header h1 {
  margin: 0;
  font-size: clamp(22px, 3.4vmin, 32px);
  font-weight: 700;
  letter-spacing: 0.2px;
}

/* Actions (top controls) */
.actions {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));
  gap: 12px;
  overflow-x: auto;
}
.actions::-webkit-scrollbar {
  display: none;
}

.actions button,
.actions select {
  background: var(--panel);
  color: var(--text);
  border: 1px solid #23263b;
  padding: 10px 14px;
  border-radius: 10px;
  cursor: pointer;
  transition:
    background 0.12s ease,
    border-color 0.12s ease,
    transform 0.08s ease;
  box-shadow:
    0 1px 0 rgba(255, 255, 255, 0.06) inset,
    0 1px 2px rgba(0, 0, 0, 0.25);
  font-size: clamp(12px, 1.8vmin, 16px);
}
.actions button:hover,
.actions select:hover {
  background: var(--panel-2);
  transform: translateY(-0.5px);
}
.actions button:disabled {
  opacity: 0.5;
  cursor: not-allowed;
}
.actions select {
  appearance: none;
  -webkit-appearance: none;
}

#new-puzzle,
#undo,
#restart,
#hint,
#solve-board {
  width: 100%;
}

/* Badges */
.badge {
  padding: 6px 10px;
  border-radius: 999px;
  background: rgba(255, 255, 255, 0.06);
  border: 1px solid #2a2f47;
  color: var(--text);
  font-size: 12px;
  display: inline-flex;
  align-items: center;
  justify-content: center;
}
.badge.danger {
  background: rgba(255, 0, 0, 0.08);
  border-color: rgba(255, 0, 0, 0.35);
}

/* Segmented */
.segmented {
  display: inline-flex;
  align-items: stretch;
  background: color-mix(in oklab, var(--panel) 94%, transparent);
  border: 1px solid #2a2f47;
  border-radius: 12px;
  overflow: hidden;
  box-shadow:
    0 1px 2px rgba(0, 0, 0, 0.25),
    inset 0 1px 0 rgba(255, 255, 255, 0.04);
  min-width: 260px;
}
.segmented button {
  appearance: none;
  border: 0;
  background: transparent;
  padding: 10px 16px;
  min-width: 86px;
  color: var(--muted);
  font-weight: 700;
  letter-spacing: 0.2px;
  cursor: pointer;
  transition:
    background 0.12s ease,
    color 0.12s ease,
    box-shadow 0.12s ease;
}
.segmented button + button {
  border-left: 1px solid #2a2f47;
}
.segmented button:hover {
  background: rgba(255, 255, 255, 0.04);
  color: var(--text);
}
.segmented button.active,
.segmented button[aria-pressed='true'] {
  background: color-mix(in oklab, var(--panel-2) 92%, transparent);
  color: var(--text);
  box-shadow: inset 0 0 0 1px rgba(255, 255, 255, 0.05);
}

/* App card */
main {
  display: grid;
  place-items: start center;
}
.app {
  padding: var(--pad);
  background: color-mix(in oklab, var(--panel) 92%, transparent);
  border-radius: 16px;
  box-shadow: 0 8px 24px rgba(0, 0, 0, 0.35);
  backdrop-filter: saturate(160%) blur(18px);
}

/* Overlay */
.overlay {
  position: fixed;
  inset: 0;
  display: grid;
  place-items: center;
  background: rgba(0, 0, 0, 0.35);
  backdrop-filter: blur(2px);
}
.overlay.hidden {
  display: none;
}
.overlay-card {
  background: var(--panel);
  color: var(--text);
  border: 1px solid #23263b;
  padding: 16px 18px;
  border-radius: 14px;
  min-width: 260px;
  display: grid;
  gap: 12px;
  justify-items: center;
  box-shadow: 0 8px 24px rgba(0, 0, 0, 0.35);
}
.overlay .spinner {
  width: 28px;
  height: 28px;
  border-radius: 50%;
  border: 3px solid rgba(255, 255, 255, 0.15);
  border-top-color: var(--primary);
  animation: spin 1s linear infinite;
}
@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

/* Board */
.board {
  display: grid;
  grid-template-columns: repeat(9, var(--cell-size));
  border: 5px solid var(--grid-strong);
  background: var(--panel);
  border-radius: 10px;
  overflow: hidden;
  box-shadow: inset 0 0 0 1px rgba(255, 255, 255, 0.03);
}

.cell {
  width: var(--cell-size);
  height: var(--cell-size);
  border: 1px solid var(--grid);
  display: grid;
  place-items: center;
  position: relative;
}

/* vertical strong borders */
.cell:nth-child(3n) {
  border-right: 4px solid var(--grid-strong);
}
.cell:nth-child(9n + 1) {
  border-left: 4px solid var(--grid-strong);
}

/* horizontal strong borders */
.cell::after {
  content: '';
  position: absolute;
  left: -1px;
  right: -1px;
  bottom: -1px;
  height: 0;
  border-bottom: 1px solid var(--grid);
}
.cell[data-row='2']::after,
.cell[data-row='5']::after,
.cell[data-row='8']::after {
  border-bottom: 4px solid var(--grid-strong);
}

/* Selected + highlights */
.cell.selected {
  outline: 3px solid color-mix(in oklab, var(--primary) 70%, transparent);
  outline-offset: -3px;
}
.cell.hl-rc {
  background: color-mix(in oklab, var(--panel-2) 85%, transparent);
}
.cell.hl-same {
  box-shadow: inset 0 0 0 2px var(--primary);
}

/* Inputs */
/* Inputs inside each cell — iOS-safe */
.cell input {
  display: block;
  width: 100%;
  height: 100%;
  margin: 0;
  padding: 0;
  border: none;
  outline: none;
  background: transparent;

  /* typography */
  text-align: center;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif;
  font-size: calc(var(--cell-size) * 0.7);
  line-height: 1.05;
  font-weight: 600;
  font-variant-numeric: tabular-nums;
  color: var(--text);

  /* iOS rendering fixes — force repaint, no 3D accel */
  -webkit-text-size-adjust: 100%;
  -webkit-font-smoothing: antialiased;
  text-rendering: optimizeLegibility;
  text-shadow: 0 0 0 currentColor;
  -webkit-text-stroke: 0.2px transparent;
  backface-visibility: visible;
  transform: none;
  caret-color: transparent;
  pointer-events: auto;
}
/* iOS-specific safety net: never 3D-transform the board or inputs */
@supports (-webkit-touch-callout: none) {
  .app,
  .board,
  .cell input {
    transform: none !important;
    backface-visibility: visible !important;
  }
}

.cell input[readonly] {
  color: var(--muted);
}
.cell.prefill input {
  color: var(--text);
  font-weight: 600;
}
.cell.given input {
  color: var(--primary);
  font-weight: 600;
}
.cell.mistake input {
  color: var(--danger) !important;
  font-weight: 800;
}
.cell.mistake {
  box-shadow: inset 0 0 0 2px color-mix(in oklab, var(--warning) 80%, transparent);
}
.cell.mistake-flash {
  animation: mistakeFlash 0.26s ease;
}
@keyframes mistakeFlash {
  0% {
    box-shadow: 0 0 0 0 rgba(255, 0, 0, 0.6);
  }
  100% {
    box-shadow: 0 0 0 10px rgba(255, 0, 0, 0);
  }
}

/* Numpad */
.numpad {
  margin-top: 12px;
  display: grid;
  grid-template-columns: repeat(5, minmax(clamp(44px, 6vmin, 72px), 1fr));
  gap: 8px;
  position: sticky;
  bottom: 0;
  padding: 8px;
  padding-bottom: max(8px, env(safe-area-inset-bottom));
  background: var(--panel);
}
.numpad button {
  background: var(--panel);
  color: var(--text);
  border: 1px solid #23263b;
  padding: clamp(8px, 1.2vmin, 12px) 0;
  border-radius: 10px;
  cursor: pointer;
  transition:
    background 0.12s ease,
    transform 0.08s ease;
  box-shadow:
    0 1px 0 rgba(255, 255, 255, 0.06) inset,
    0 1px 2px rgba(0, 0, 0, 0.2);
  font-size: 16px; /* keep 16px to avoid iOS zoom */
  min-height: 44px;
  min-width: 44px;
  touch-action: manipulation;
}
.numpad button:hover {
  background: var(--panel-2);
  transform: translateY(-0.5px);
}
.numpad button[disabled] {
  opacity: 0.45;
  cursor: not-allowed;
}
.numpad button.muted {
  color: var(--muted);
}

/* Status */
.status {
  margin-top: 14px;
  color: var(--muted);
  font-size: clamp(12px, 1.8vmin, 15px);
}

/* Mobile hardening */
button {
  font-size: 16px;
} /* avoid iOS zoom on buttons */
* {
  -webkit-tap-highlight-color: transparent;
}
.board,
.numpad,
button {
  user-select: none;
}

/* Disable backdrop-filter on iOS to avoid glyph slicing */
@supports (-webkit-touch-callout: none) {
  .app,
  .board {
    -webkit-backdrop-filter: none !important;
    backdrop-filter: none !important;
  }
}

/* Sticky topbars if present */
.controls,
.toolbar,
.topbar,
.hud {
  position: sticky;
  top: max(0px, env(safe-area-inset-top));
  z-index: 10;
  display: flex;
  flex-wrap: wrap;
  gap: 8px;
}

/* Middle content scroll so numpad stays visible */
.main,
.content,
.board-wrap {
  height: calc(100dvh - 160px);
  overflow: auto;
}

/* On touch devices, let taps hit the CELL, not the INPUT (prevents soft keyboard) */
@media (hover: none) and (pointer: coarse) {
  .cell input {
    pointer-events: none;
  } /* tap goes to .cell */
}

/* Ensure the last board row is never hidden behind the sticky numpad */
.app {
  padding-bottom: 140px;
} /* reserve space for the pad */
/* Normalize actions layout across breakpoints */
#difficulty-group {
  grid-column: 1 / -1;
} /* Easy/Medium/Hard alone */
#new-puzzle {
  grid-column: 1 / -1;
} /* New gets a full row */
#solve-board {
  grid-column: 1 / -1;
} /* Solve gets a full row (mobile-first) */

/* Keep badges aligned in one row */
#error-badge,
#hint-badge,
#clock-badge {
  white-space: nowrap;
}

/* Desktop: compress rows; keep New with the primaries, badges together */
@media (min-width: 900px) {
  .actions {
    grid-template-columns: repeat(6, minmax(120px, 1fr));
    align-items: stretch;
  }
  #difficulty-group {
    grid-column: 1 / 3;
  } /* spans 2 columns */
  #new-puzzle {
    grid-column: 3 / 4;
  }
  #undo {
    grid-column: 4 / 5;
  }
  #restart {
    grid-column: 5 / 6;
  }
  #hint {
    grid-column: 6 / 7;
  }
  #solve-board {
    grid-column: 1 / 4;
  } /* wide button below */
  #error-badge {
    grid-column: 4 / 5;
  }
  #hint-badge {
    grid-column: 5 / 6;
  }
  #clock-badge {
    grid-column: 6 / 7;
  }
}
/* Reserve space so the sticky numpad never covers the board */
.app {
  padding-bottom: calc(140px + env(safe-area-inset-bottom));
}

/* Let content between header and numpad scroll */
.main,
.content,
.board-wrap {
  max-height: calc(100dvh - 220px); /* header+actions+numpad budget */
  overflow: auto;
}
.site-header {
  margin-bottom: 8px;
}
.actions {
  row-gap: 10px;
  margin-bottom: 10px;
}
.status {
  margin-top: 12px;
}
